version "2.3.0"
class HeadShotBaseZScript : Actor //ZScriptified Headbox
{
	Default
	{
		damagefactor "Taunt", 0.0;
		damagefactor "Blood", 0.0;
		damagefactor "BlueBlood", 0.0;
		damagefactor "Head", 0.0;
		damagefactor "MinorHead", 0.0;
		damagefactor "KillMe", 0.0;
		damagefactor "Control", 0.0;
		damagefactor "Trample", 0.0;
		damagefactor "GibRemoving", 0.0;
		//damagefactor "Melee", 0.3
		damagefactor "Alert", 0.0;
		damagefactor "SSG", 8.0;
		damagefactor "ExplosiveImpact", 0.0;
		damagefactor "Bullet", 1.5;
		damagefactor "GibRemoving", 0.0;
		damagefactor "TeleportRemover", 0.0;
		DamageFactor "Freeze", 0.0;
		DamageFactor "Shrink", 0.0;
		DamageFactor "Frost", 0.0;
		DamageFactor "Ice", 0.0;
		DamageFactor "Blackhole", 0.0;
		Speed 0;
		Radius 7;
		Height 18;
		BloodType "Brutal_Blood", "SawBlood", "SawBlood";
		-COUNTKILL +NOTARGET +MISSILE
		+NOGRAVITY +SHOOTABLE +NOTELEPORT -SOLID +NODAMAGETHRUST
		+THRUGHOST +NORADIUSDMG +GHOST -COUNTKILL +NOTAUTOAIMED +DONTTHRUST
	}
	States
	{
		Spawn:
			TNT1 A 1;
			Loop;
	}
	override void Tick()
	{
		Super.Tick();
		Console.Printf("1");
		if (master) SetXYZ(master.pos + (0,0,master.height));
	}
	override void PostBeginPlay()
	{
		Super.PostBeginPlay();
		if (target) 
		{
			master = target;
			
			bMISSILE = false;
		}
	}
	override int DamageMobj(Actor inflictor, Actor source,int damage,Name mod,int Flags,Double angle)
	{
		Console.Printf("Got Hit");
		if (master) master.DamageMobj(inflictor,source,damage * 1.5,mod == 'None' ? 'Head' : mod, flags,angle);
		return 0; //Do no real damage to self
	}
}
class HeadshotBaseZScriptB :HeadshotBaseZScript //Green blood headbox
{
	Default
	{
		BloodType "Green_Blood", "GreenSawBlood", "GreenSawBlood";
		BloodColor "DarkGreen";
		Radius 12;
		Height 22;
		+NOBLOODDECALS
	}
}
class PB_WeaponBase : DoomWeapon 
{
}
extend class PB_WeaponBase
{
	action state A_DoPBWeaponAction()
	{
		A_WeaponReady(WRF_ALLOWRELOAD);
		A_WeaponOffset(CallACS("Script_GetGunOffsetX"), CallACS("Script_GetGunOffsetY"),WOF_KEEPY);
		if (CountInv("Grabbing_A_Ledge")>=1) 
		{
			return ResolveState("LedgeClimb");
		}
		else if (CountInv("DoPunch")>=1) 
		{
			return ResolveState("QuickPunch");
		}
		else if (CountInv("Kicking")>=1) 
		{
			return ResolveState("DoKick");
		}
		else if (CountInv("Taunting")>=1) 
		{
			return ResolveState("Taunt");
		}
		else if (CountInv("Salute1")>=1) 
		{
			return ResolveState("Salute");
		}
		else if (CountInv("Salute2")>=1) {return ResolveState("Salute");}
		else if (CountInv("UseEquipment")>=1) {return ResolveState("UseEquipment");}
		else if (CountInv("ToggleEquipment")>=1) {return ResolveState("SwitchEquipment");}
		else if (CountInv("GoWeaponSpecialAbility")>=1) {return ResolveState("WeaponSpecial");}
		else if (CountInv("GrabbedBarrel")>=1) {return ResolveState("GrabBarrel");}
		else if (CountInv("GrabbedBurningBarrel")>=1) {return ResolveState("GrabBarrel");}
		return null;
	}
}